Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
                              hd44780.o (__divmodhi4)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
                              hd44780.o (__divmodsi4)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
                              /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o) (__negsi2)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o (exit)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
                              Lab5A.o (__do_copy_data)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
                              Lab5A.o (__do_clear_bss)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
                              button7segFunctions.o (__umulhisi3)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o) (__udivmodhi4)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
                              /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o) (__udivmodsi4)

Allocating common symbols
Common symbol       size              file

buttonState         0x1               button7segFunctions.o
dec_to_7seg         0xc               button7segFunctions.o
lcd_string_array    0x20              hd44780.o
digitSelect         0x8               button7segFunctions.o
adc_result          0x2               Lab5A.o
i                   0x1               Lab5A.o
lcd_str             0x10              hd44780.o
encoderState        0x1               encoderFunctions.o
segment_data        0x5               button7segFunctions.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
LOAD Lab5A.o
LOAD hd44780.o
LOAD button7segFunctions.o
LOAD encoderFunctions.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega128.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x136e
 *(.vectors)
 .vectors       0x0000000000000000       0x8c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x000000000000008c                . = ALIGN (0x2)
                0x000000000000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000008c        0x0 linker stubs
 *(.trampolines*)
                0x000000000000008c                __trampolines_end = .
 *(.progmem*)
                0x000000000000008c                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000008c                __ctors_start = .
 *(.ctors)
                0x000000000000008c                __ctors_end = .
                0x000000000000008c                __dtors_start = .
 *(.dtors)
                0x000000000000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000008c        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
                0x000000000000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000008c        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000098       0x1a /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
                0x0000000000000098                __do_copy_data
 .init4         0x00000000000000b2       0x10 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
                0x00000000000000b2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000c2        0x8 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
 *(.init9)
 *(.text)
 .text          0x00000000000000ca        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
                0x00000000000000ca                __vector_22
                0x00000000000000ca                __vector_28
                0x00000000000000ca                __vector_1
                0x00000000000000ca                __vector_32
                0x00000000000000ca                __vector_34
                0x00000000000000ca                __vector_24
                0x00000000000000ca                __bad_interrupt
                0x00000000000000ca                __vector_6
                0x00000000000000ca                __vector_31
                0x00000000000000ca                __vector_3
                0x00000000000000ca                __vector_23
                0x00000000000000ca                __vector_30
                0x00000000000000ca                __vector_25
                0x00000000000000ca                __vector_11
                0x00000000000000ca                __vector_13
                0x00000000000000ca                __vector_17
                0x00000000000000ca                __vector_19
                0x00000000000000ca                __vector_7
                0x00000000000000ca                __vector_27
                0x00000000000000ca                __vector_5
                0x00000000000000ca                __vector_33
                0x00000000000000ca                __vector_4
                0x00000000000000ca                __vector_9
                0x00000000000000ca                __vector_2
                0x00000000000000ca                __vector_21
                0x00000000000000ca                __vector_15
                0x00000000000000ca                __vector_8
                0x00000000000000ca                __vector_26
                0x00000000000000ca                __vector_14
                0x00000000000000ca                __vector_10
                0x00000000000000ca                __vector_18
                0x00000000000000ca                __vector_20
 .text          0x00000000000000ce      0x3ca Lab5A.o
                0x00000000000000ce                spi_init
                0x000000000000010a                spiTxRx
                0x0000000000000158                __vector_16
                0x000000000000021e                __vector_12
                0x0000000000000242                __vector_29
                0x0000000000000256                timer_init
                0x000000000000029a                adc_init
                0x00000000000002ca                update7Seg
                0x0000000000000328                readADC
                0x000000000000033e                stateSwitcher
 .text          0x0000000000000498      0x5fc hd44780.o
                0x0000000000000498                send_lcd
                0x00000000000004ce                refresh_lcd
                0x0000000000000544                set_custom_character
                0x000000000000059e                set_cursor
                0x00000000000005b2                uint2lcd
                0x0000000000000642                int2lcd
                0x0000000000000666                cursor_on
                0x0000000000000672                cursor_off
                0x000000000000067e                shift_right
                0x000000000000068a                shift_left
                0x0000000000000696                strobe_lcd
                0x00000000000006a8                clear_display
                0x00000000000006b4                cursor_home
                0x00000000000006c0                home_line2
                0x00000000000006cc                fill_spaces
                0x00000000000006e4                char2lcd
                0x00000000000006f0                string2lcd
                0x0000000000000736                lcd_init
                0x00000000000007a8                lcd_int32
                0x0000000000000918                lcd_int16
 .text          0x0000000000000a94      0x284 button7segFunctions.o
                0x0000000000000a94                digit_init
                0x0000000000000aee                chk_button
                0x0000000000000b2e                segsum
                0x0000000000000c98                toggle_button_bus
 .text          0x0000000000000d18      0x366 encoderFunctions.o
                0x0000000000000d18                checkDirection
                0x0000000000000d56                increment
                0x0000000000000db8                decrement
                0x0000000000000e1a                interpret_encoders
 .text          0x000000000000107e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text          0x000000000000107e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text          0x000000000000107e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text          0x000000000000107e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text          0x000000000000107e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text          0x000000000000107e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text          0x000000000000107e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
 .text          0x000000000000107e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text          0x000000000000107e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
                0x000000000000107e                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000000000000107e      0x1fc Lab5A.o
                0x000000000000107e                main
 .text.libgcc.mul
                0x000000000000127a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x000000000000127a       0x28 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
                0x000000000000127a                __divmodhi4
                0x000000000000127a                _div
 .text.libgcc   0x00000000000012a2        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x00000000000012a2        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x00000000000012a2        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x00000000000012a2        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fixed
                0x00000000000012a2        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x00000000000012a2        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.div
                0x00000000000012a2       0x2e /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
                0x00000000000012a2                __divmodsi4
 .text.libgcc   0x00000000000012d0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.prologue
                0x00000000000012d0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.builtins
                0x00000000000012d0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.fmul
                0x00000000000012d0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.fixed
                0x00000000000012d0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.mul
                0x00000000000012d0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.div
                0x00000000000012d0       0x10 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
                0x00000000000012d0                __negsi2
 .text.libgcc   0x00000000000012e0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.prologue
                0x00000000000012e0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.builtins
                0x00000000000012e0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.fmul
                0x00000000000012e0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.fixed
                0x00000000000012e0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.mul
                0x00000000000012e0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000012e0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000012e0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000012e0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000012e0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000012e0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000012e0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000012e0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000012e0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000012e0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000012e0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000012e0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000012e0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000012e0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000012e0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000012e0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000012e0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000012e0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000012e0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000012e0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000012e0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000000012e0       0x1e /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
                0x00000000000012e0                __umulhisi3
 .text.libgcc.div
                0x00000000000012fe        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc   0x00000000000012fe        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.prologue
                0x00000000000012fe        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.builtins
                0x00000000000012fe        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.fmul
                0x00000000000012fe        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.fixed
                0x00000000000012fe        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.mul
                0x00000000000012fe        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x00000000000012fe       0x28 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
                0x00000000000012fe                __udivmodhi4
 .text.libgcc   0x0000000000001326        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000001326        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000001326        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000001326        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x0000000000001326        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x0000000000001326        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x0000000000001326       0x44 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
                0x0000000000001326                __udivmodsi4
 .text.libgcc   0x000000000000136a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x000000000000136a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x000000000000136a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x000000000000136a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x000000000000136a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
                0x000000000000136a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000136a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
                0x000000000000136a                exit
                0x000000000000136a                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000136a        0x4 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000136e                _etext = .

.data           0x0000000000800100       0xac load address 0x000000000000136e
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
 .data          0x0000000000800100        0xb Lab5A.o
                0x0000000000800100                volume
                0x0000000000800101                lcdText2
                0x0000000000800103                lcdText1
                0x0000000000800105                hours12_24
                0x0000000000800106                snuze_h
                0x0000000000800107                alarm_h
                0x0000000000800108                clock_h
                0x0000000000800109                clock_m
                0x000000000080010a                a
 .data          0x000000000080010b        0x0 hd44780.o
 .data          0x000000000080010b        0x0 button7segFunctions.o
 .data          0x000000000080010b        0x0 encoderFunctions.o
 .data          0x000000000080010b        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .data          0x000000000080010b        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .data          0x000000000080010b        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .data          0x000000000080010b        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .data          0x000000000080010b        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .data          0x000000000080010b        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .data          0x000000000080010b        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
 .data          0x000000000080010b        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .data          0x000000000080010b        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x000000000080010b       0xa1 Lab5A.o
 *(.gnu.linkonce.d*)
                0x00000000008001ac                . = ALIGN (0x2)
                0x00000000008001ac                _edata = .
                0x00000000008001ac                PROVIDE (__data_end, .)

.bss            0x00000000008001ac       0x74
                0x00000000008001ac                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00000000008001ac        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
 .bss           0x00000000008001ac       0x10 Lab5A.o
                0x00000000008001ac                barNum
                0x00000000008001ad                segNum
                0x00000000008001af                alarmBeep
                0x00000000008001b0                am_pm
                0x00000000008001b1                snuze_m
                0x00000000008001b2                snuze_s
                0x00000000008001b3                alarm_m
                0x00000000008001b4                alarm_s
                0x00000000008001b5                clock_s
                0x00000000008001b6                STATE
                0x00000000008001b8                b
 .bss           0x00000000008001bc        0x1 hd44780.o
 .bss           0x00000000008001bd       0x10 button7segFunctions.o
 .bss           0x00000000008001cd        0x5 encoderFunctions.o
 .bss           0x00000000008001d2        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .bss           0x00000000008001d2        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .bss           0x00000000008001d2        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .bss           0x00000000008001d2        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .bss           0x00000000008001d2        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .bss           0x00000000008001d2        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .bss           0x00000000008001d2        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
 .bss           0x00000000008001d2        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .bss           0x00000000008001d2        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00000000008001d2        0x3 Lab5A.o
                0x00000000008001d2                adc_result
                0x00000000008001d4                i
 COMMON         0x00000000008001d5       0x30 hd44780.o
                0x00000000008001d5                lcd_string_array
                0x00000000008001f5                lcd_str
 COMMON         0x0000000000800205       0x1a button7segFunctions.o
                0x0000000000800205                buttonState
                0x0000000000800206                dec_to_7seg
                0x0000000000800212                digitSelect
                0x000000000080021a                segment_data
 COMMON         0x000000000080021f        0x1 encoderFunctions.o
                0x000000000080021f                encoderState
                0x0000000000800220                PROVIDE (__bss_end, .)
                0x000000000000136e                __data_load_start = LOADADDR (.data)
                0x000000000000141a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800220        0x0
                0x0000000000800220                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800220                PROVIDE (__noinit_end, .)
                0x0000000000800220                _end = .
                0x0000000000800220                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x2f7c
 *(.stab)
 .stab          0x0000000000000000     0x10d4 Lab5A.o
 .stab          0x00000000000010d4      0xef4 hd44780.o
                                       0x1128 (size before relaxing)
 .stab          0x0000000000001fc8      0x6b4 button7segFunctions.o
                                        0x87c (size before relaxing)
 .stab          0x000000000000267c      0x900 encoderFunctions.o
                                        0xaec (size before relaxing)

.stabstr        0x0000000000000000     0x156c
 *(.stabstr)
 .stabstr       0x0000000000000000     0x156c Lab5A.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 Lab5A.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 hd44780.o
 .comment       0x0000000000000011       0x12 button7segFunctions.o
 .comment       0x0000000000000011       0x12 encoderFunctions.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(Lab5A.elf elf32-avr)
LOAD linker stubs
